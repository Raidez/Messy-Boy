STATES = {
	"choose_action",
	"opened_menu",
	"select_target",
	"waiting"
}

function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })

	self.state = STATES[1]
	self.action = nil
	self.menu = nil
	self.target = nil
end

function on_action(self, action)
	if action == "taunt" or action == "attack" then
		msg.post("/gui", "set_target", { 1 })
		self.state = STATES[3]
	elseif action == "dont" or action == "run" then
		self.state = STATES[4]
	else
		msg.post("/hero", "show_" .. action)
		self.state = STATES[2]
	end
end

function on_menu(self, menu)
	print("use_" .. self.action)
	msg.post("/hero", "use_" .. self.action, menu)
	self.state = STATES[3]
end

function on_target(self, target)
	print(target)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("action") and message[1] then
		self.action = message[1]
		on_action(self, message[1])
	elseif message_id == hash("menu") and message[1] then
		self.menu = message[1]
		on_menu(self, message[1])
	elseif message_id == hash("target") and message[1] then
		self.target = message[1]
		on_target(self, message[1])
	elseif message_id == hash("over") then
		self.state = STATES[1]
	end
end

function on_input(self, action_id, action)
	--if action_id == hash("") then
	if self.state == STATES[1] and action.pressed then
		if action_id == hash("Left") then
			msg.post("/gui", "change_action", { -1 })
		elseif action_id == hash("Right") then
			msg.post("/gui", "change_action", { 1 })
		elseif action_id == hash("Select") then
			msg.post("/gui", "select_action")
		end
	end

	if self.state == STATES[2] and action.pressed then
		if action_id == hash("Up") then
			msg.post("/gui", "change_menu", { -1 })
		elseif action_id == hash("Down") then
			msg.post("/gui", "change_menu", { 1 })
		elseif action_id == hash("Select") then
			msg.post("/gui", "select_menu")
		elseif action_id == hash("Cancel") then
			msg.post("/gui", "cancel_menu")
			self.state = STATES[1]
		end
	end

	if self.state == STATES[3] and action.pressed then
		if action_id == hash("Left") then
			msg.post("/gui", "change_target", { -1 })
		elseif action_id == hash("Right") then
			msg.post("/gui", "change_target", { 1 })
		elseif action_id == hash("Select") then
			msg.post("/gui", "select_target")
		elseif action_id == hash("Cancel") then
			msg.post("/gui", "cancel_target")
			self.state = STATES[1]
		end
	end
end
